@page "/authors/edit/{AuthorId:int}"
@inject HttpClient crud
@inject NavigationManager nav
@inject IJSRuntime js

<!-- Breadcrumb -->
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><span class="oi oi-question-mark text-info" aria-hidden="true" title="Comments about this page" @onclick="@Comments" /></li>
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item"><a href="authors">Authors</a></li>
        <li class="breadcrumb-item active" aria-current="page">Edit</li>
    </ol>
</nav>

<h3>Edit Author</h3>

<hr />

<!-- Edit Form -->
<AuthorForm Author="@author"
            ContextButtonText="Update Author"
            OnValidSubmit="@( () => UpdateAuthor(AuthorId, author) )" />

@code {
    // This is a parameter for the URL
    [Parameter] public int AuthorId { get; set; }

    Author author = new Author();

    // This will get the author data accordingly to URL
    protected override async Task OnInitializedAsync()
    {
        author = await crud.GetFromJsonAsync<Author>($"api/Authors/{AuthorId}");
    }

    // This will update the author data
    async Task UpdateAuthor(int AuthorId, Author author)
    {
        await crud.PutAsJsonAsync<Author>($"api/Authors/{AuthorId}", author);
        await js.InvokeVoidAsync("alert", $"Registry updated succesfully!");
        nav.NavigateTo("authors");
    }

    // Comments
    public async Task Comments()
    {
        string comments =
            "This page is for updating one defined author (set by URL). \n\n" +
            "From a CRUD perspective, this is _rU_ (small R because it IS used). \n" +
            "This page makes use of a component, AuthorForm. And could have been the same as Add Author, just like it is for members...";

        await js.InvokeVoidAsync("alert", $"{comments}");
    }
}
